// CodeGear C++Builder
// Copyright (c) 1995, 2021 by Embarcadero Technologies, Inc.
// All rights reserved

// (DO NOT EDIT: machine generated header) 'Mitov.Containers.Dictionary.pas' rev: 35.00 (Windows)
// This file is modified to improve C++ Builder compatibility.

#ifndef Mitov_Containers_DictionaryHPP
#define Mitov_Containers_DictionaryHPP

#pragma delphiheader begin
#pragma option push
#pragma option -w-      // All warnings off
#pragma option -Vx      // Zero-length empty class member 
#pragma pack(push,8)
#include <System.hpp>
#include <SysInit.hpp>
#include <System.SysUtils.hpp>
#include <System.Generics.Collections.hpp>
#include <Mitov.Containers.Common.hpp>
#include <System.Rtti.hpp>
#include <System.TypInfo.hpp>
#include <Mitov.Containers.List.hpp>
#include <System.Generics.Defaults.hpp>

//-- user supplied -----------------------------------------------------------
template<typename T> class DELPHICLASS TDictionary__1;
  #ifdef MANAGED_INTERFACE_OPERATORS
    #define __OLD__MANAGED_INTERFACE_OPERATORS__
    #undef MANAGED_INTERFACE_OPERATORS
  #endif // MANAGED_INTERFACE_OPERATORS

namespace Mitov
{
namespace Containers
{
namespace Dictionary
{
//-- forward type declarations -----------------------------------------------
template<typename TKey, typename TValue> __interface DELPHIINTERFACE IPairCollection__2;
#ifdef __clang__
template<typename TKey, typename TValue> using _di_IPairCollection__2 =  ::System::DelphiInterface<IPairCollection__2<TKey, TValue>>;
#endif
template<typename TKey, typename TValue> __interface DELPHIINTERFACE IDictionary__2;
#ifdef __clang__
template<typename TKey, typename TValue> using _di_IDictionary__2 =  ::System::DelphiInterface<IDictionary__2<TKey, TValue>>;
#endif
template<typename TKey, typename TValue> class DELPHICLASS TDictionary__2;
template<typename TKey, typename TValue> __interface DELPHIINTERFACE IArrayPairList__2;
#ifdef __clang__
template<typename TKey, typename TValue> using _di_IArrayPairList__2 =  ::System::DelphiInterface<IArrayPairList__2<TKey, TValue>>;
#endif
template<typename TKey, typename TValue> class DELPHICLASS TArrayPairList__2;
//-- type declarations -------------------------------------------------------
// Template declaration generated by Delphi parameterized types is
// used only for accessing Delphi variables and fields.
// Don't instantiate with new type parameters in user code.
template<typename TKey, typename TValue> __interface IPairCollection__2  : public  ::Mitov::Containers::Common::IEnumerable__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > 
{
	virtual  ::System::DelphiInterface<IPairCollection__2<TKey,TValue> > __fastcall AddPair(const TKey AKey, const TValue AValue) = 0 ;
};

// Template declaration generated by Delphi parameterized types is
// used only for accessing Delphi variables and fields.
// Don't instantiate with new type parameters in user code.
template<typename TKey, typename TValue> __interface IDictionary__2  : public IPairCollection__2<TKey,TValue> 
{
	
public:
	TValue operator[](const TKey AKey) { return this->Items[AKey]; }
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall Add(const TKey AKey, const TValue AValue) = 0 ;
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall Remove(const TKey AKey, const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__1<TValue> > AFoundProc = ( ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__1<TValue> >)(0x0)) = 0 ;
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall RemoveOne(const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstFunc__3<TKey,TValue,bool> > ACompareFunc) = 0 ;
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall RemoveAll(const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstFunc__3<TKey,TValue,bool> > ACompareFunc, const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__2<TKey,TValue> > AFoundProc = ( ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__2<TKey,TValue> >)(0x0)) = 0 ;
	virtual  ::System::Generics::Collections::TPair__2<TKey,TValue> __fastcall ExtractPair(const TKey AKey) = 0 ;
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall Clear() = 0 ;
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall TrimExcess() = 0 ;
	virtual bool __fastcall ContainsKey(const TKey AKey) = 0 ;
	virtual bool __fastcall ContainsValue(const TValue AValue) = 0 ;
	virtual bool __fastcall GetValue(const TKey AKey, /* out */ TValue &AValue) = 0 ;
	virtual TValue __fastcall GetOrAddValue(const TKey AKey, const  ::System::DelphiInterface< ::System::Sysutils::TFunc__1<TValue> > AOnAdd) = 0 ;
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall ForItem(const TKey AKey, const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__1<TValue> > ALambda) = 0 ;
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall ForKeys(const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__1< ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TKey> > > > ALambda) = 0 ;
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall ForValues(const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__1< ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TValue> > > > ALambda) = 0 ;
	virtual  ::System::DelphiInterface< ::Mitov::Containers::Common::IContainerQuery__3< ::System::DelphiInterface<IDictionary__2<TKey,TValue> >, ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > >, ::System::Generics::Collections::TPair__2<TKey,TValue> > > __fastcall Query() = 0 ;
	virtual  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > > __fastcall GetPairs() = 0 /* overload */;
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall GetPairs(/* out */  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > > &AList) = 0 /* overload */;
	virtual  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TKey> > __fastcall GetKeys() = 0 /* overload */;
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall GetKeys(/* out */  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TKey> > &AKeyList) = 0 /* overload */;
	virtual  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TValue> > __fastcall GetValues() = 0 /* overload */;
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall GetValues(/* out */  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TValue> > &AValueList) = 0 /* overload */;
	virtual int __fastcall GetCount() = 0 ;
	virtual TValue __fastcall GetItem(const TKey AKey) = 0 ;
	virtual void __fastcall SetItem(const TKey AKey, const TValue AValue) = 0 ;
	__property TValue Items[const TKey AKey] = {read=GetItem, write=SetItem/*, default*/};
	__property int Count = {read=GetCount};
};

#pragma pack(push,4)
// Template declaration generated by Delphi parameterized types is
// used only for accessing Delphi variables and fields.
// Don't instantiate with new type parameters in user code.
template<typename TKey, typename TValue> class PASCALIMPLEMENTATION TDictionary__2 : public  ::Mitov::Containers::List::TInterfacedChangeNotifyObject
{
	typedef  ::Mitov::Containers::List::TInterfacedChangeNotifyObject inherited;
	
	
public:
	class DELPHICLASS TPairEnumerator;
	// Template declaration generated by Delphi parameterized types is
	// used only for accessing Delphi variables and fields.
	// Don't instantiate with new type parameters in user code.
	class PASCALIMPLEMENTATION TPairEnumerator : public  ::System::TInterfacedObject
	{
		typedef  ::System::TInterfacedObject inherited;
		
	private:
		 ::System::Generics::Collections::TDictionary__2<TKey,TValue>* FDictionary;
		typename System::Generics::Collections::TDictionary__2<TKey,TValue>::TPairEnumerator* FEnumerator;
		
	public:
		 ::System::TObject* __fastcall GetCurrent();
		void __fastcall Reset();
		bool __fastcall MoveNext();
		 ::System::Generics::Collections::TPair__2<TKey,TValue> __fastcall GenericGetCurrent();
		__fastcall TPairEnumerator(TDictionary__2<TKey,TValue>* ADictionary);
		__fastcall virtual ~TPairEnumerator();
private:
		void *__IEnumerator__1;	//  ::System::IEnumerator__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > 
		
public:
		operator  ::System::IEnumerator__1< ::System::Generics::Collections::TPair__2<TKey,TValue> >*(void) { return ( ::System::IEnumerator__1< ::System::Generics::Collections::TPair__2<TKey,TValue> >*)&__IEnumerator__1; }
		
	};
	
	
	
protected:
	 ::System::Generics::Collections::TDictionary__2<TKey,TValue>* FDictionary;
	
protected:
	int __fastcall GetCount();
	virtual TValue __fastcall GetItem(const TKey AKey);
	virtual void __fastcall SetItem(const TKey AKey, const TValue AValue);
	__classmethod  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > > __fastcall CreateList();
	__classmethod void __fastcall AddQueryListItem(const  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > > AList, const  ::System::Generics::Collections::TPair__2<TKey,TValue> &AItem);
	virtual  ::System::DelphiInterface<IPairCollection__2<TKey,TValue> > __fastcall AddPair(const TKey AKey, const TValue AValue);
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall Add(const TKey AKey, const TValue AValue);
	virtual  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall Remove(const TKey AKey, const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__1<TValue> > AFoundProc = ( ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__1<TValue> >)(0x0));
	 ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall RemoveOne(const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstFunc__3<TKey,TValue,bool> > ACompareFunc);
	 ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall RemoveAll(const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstFunc__3<TKey,TValue,bool> > ACompareFunc, const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__2<TKey,TValue> > AFoundProc = ( ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__2<TKey,TValue> >)(0x0));
	virtual  ::System::Generics::Collections::TPair__2<TKey,TValue> __fastcall ExtractPair(const TKey AKey);
	 ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall Clear();
	 ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall TrimExcess();
	virtual bool __fastcall ContainsKey(const TKey AKey);
	bool __fastcall ContainsValue(const TValue AValue);
	virtual bool __fastcall GetValue(const TKey AKey, /* out */ TValue &AValue);
	virtual TValue __fastcall GetOrAddValue(const TKey AKey, const  ::System::DelphiInterface< ::System::Sysutils::TFunc__1<TValue> > AOnAdd);
	 ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall ForEach(const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > > ALambda);
	 ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall ForItem(const TKey AKey, const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__1<TValue> > ALambda);
	 ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall ForKeys(const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__1< ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TKey> > > > ALambda);
	 ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall ForValues(const  ::System::DelphiInterface< ::Mitov::Containers::Common::TConstProc__1< ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TValue> > > > ALambda);
	 ::System::DelphiInterface< ::Mitov::Containers::Common::IContainerQuery__3< ::System::DelphiInterface<IDictionary__2<TKey,TValue> >, ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > >, ::System::Generics::Collections::TPair__2<TKey,TValue> > > __fastcall Query();
	 ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > > __fastcall GetPairs()/* overload */;
	 ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall GetPairs(/* out */  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > > &AList)/* overload */;
	 ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TKey> > __fastcall GetKeys()/* overload */;
	 ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall GetKeys(/* out */  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TKey> > &AKeyList)/* overload */;
	 ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TValue> > __fastcall GetValues()/* overload */;
	 ::System::DelphiInterface<IDictionary__2<TKey,TValue> > __fastcall GetValues(/* out */  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1<TValue> > &AValueList)/* overload */;
	
public:
	virtual  ::System::DelphiInterface< ::System::IEnumerator__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > > __fastcall GetEnumerator();
	virtual  ::System::DelphiInterface< ::System::IEnumerator__1< ::System::Rtti::TValue> > __fastcall GetValueEnumerator();
	virtual void __fastcall AddValue(const  ::System::Rtti::TValue &AValue);
	virtual void __fastcall ClearValues();
	virtual  ::System::Rtti::TValue __fastcall GetNewValue();
	__fastcall TDictionary__2();
	__fastcall TDictionary__2(const  ::System::DelphiInterface<IDictionary__2<TKey,TValue> > AOther);
	__fastcall virtual ~TDictionary__2();
private:
	void *__IList;	//  ::Mitov::Containers::Common::IList 
	void *__IDictionary__2;	// IDictionary__2<TKey,TValue> 
	
public:
	#if defined(MANAGED_INTERFACE_OPERATORS)
	// {EEFAD71F-D914-4F0B-A092-DBE8223F48CA}
	operator  ::Mitov::Containers::Common::_di_IList()
	{
		 ::Mitov::Containers::Common::_di_IList intf;
		this->GetInterface(intf);
		return intf;
	}
	#else
	operator  ::Mitov::Containers::Common::IList*(void) { return ( ::Mitov::Containers::Common::IList*)&__IList; }
	#endif
	operator IPairCollection__2<TKey,TValue>*(void) { return (IPairCollection__2<TKey,TValue>*)&__IDictionary__2; }
	operator IDictionary__2<TKey,TValue>*(void) { return (IDictionary__2<TKey,TValue>*)&__IDictionary__2; }
	
};

#pragma pack(pop)

// Template declaration generated by Delphi parameterized types is
// used only for accessing Delphi variables and fields.
// Don't instantiate with new type parameters in user code.
template<typename TKey, typename TValue> __interface  INTERFACE_UUID("{1207AAB0-654E-4286-B3A6-7C9A97BAA313}") IArrayPairList__2  : public  ::Mitov::Containers::List::IArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > 
{
	virtual  ::System::DelphiInterface<IPairCollection__2<TKey,TValue> > __fastcall AddPair(const TKey AKey, const TValue AValue) = 0 ;
	virtual  ::System::DelphiInterface<IPairCollection__2<TKey,TValue> > __fastcall InsertPair(int AIndex, const TKey AKey, const TValue AValue) = 0 ;
	virtual  ::System::DelphiInterface<IPairCollection__2<TKey,TValue> > __fastcall GetAsPairCollection() = 0 ;
};

#pragma pack(push,4)
// Template declaration generated by Delphi parameterized types is
// used only for accessing Delphi variables and fields.
// Don't instantiate with new type parameters in user code.
template<typename TKey, typename TValue> class PASCALIMPLEMENTATION TArrayPairList__2 : public  ::Mitov::Containers::List::TArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> >
{
	typedef  ::Mitov::Containers::List::TArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > inherited;
	
protected:
	 ::System::DelphiInterface<IPairCollection__2<TKey,TValue> > __fastcall AddPair(const TKey AKey, const TValue AValue);
	 ::System::DelphiInterface<IPairCollection__2<TKey,TValue> > __fastcall InsertPair(int AIndex, const TKey AKey, const TValue AValue);
	 ::System::DelphiInterface<IPairCollection__2<TKey,TValue> > __fastcall GetAsPairCollection();
public:
	/* {Mitov_Containers_List}TArrayList<System_Generics_Collections_TPair<Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TKey,Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TValue>>.Create */ inline __fastcall TArrayPairList__2() :  ::Mitov::Containers::List::TArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> >() { }
	/* {Mitov_Containers_List}TArrayList<System_Generics_Collections_TPair<Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TKey,Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TValue>>.CreateEnumerator */ inline __fastcall TArrayPairList__2( ::System::Generics::Collections::TEnumerator__1< ::System::Generics::Collections::TPair__2<TKey,TValue> >* const AEnumerator)/* overload */ :  ::Mitov::Containers::List::TArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> >(AEnumerator) { }
	/* {Mitov_Containers_List}TArrayList<System_Generics_Collections_TPair<Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TKey,Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TValue>>.CreateEnumerator */ inline __fastcall TArrayPairList__2(const  ::System::DelphiInterface< ::System::IEnumerator__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > > AEnumerator)/* overload */ :  ::Mitov::Containers::List::TArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> >(AEnumerator) { }
	/* {Mitov_Containers_List}TArrayList<System_Generics_Collections_TPair<Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TKey,Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TValue>>.CreateCopy */ inline __fastcall TArrayPairList__2(const  ::System::DelphiInterface< ::Mitov::Containers::List::IArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> > > AOther) :  ::Mitov::Containers::List::TArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> >(AOther) { }
	/* {Mitov_Containers_List}TArrayList<System_Generics_Collections_TPair<Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TKey,Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TValue>>.CreateArray */ inline __fastcall TArrayPairList__2(const  ::System::Generics::Collections::TPair__2<TKey,TValue> *AOther, const int AOther_High) :  ::Mitov::Containers::List::TArrayList__1< ::System::Generics::Collections::TPair__2<TKey,TValue> >(AOther, AOther_High) { }
	/* {Mitov_Containers_List}TArrayList<System_Generics_Collections_TPair<Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TKey,Mitov_Containers_Dictionary_TArrayPairList<TKey,TValue>_TValue>>.Destroy */ inline __fastcall virtual ~TArrayPairList__2() { }
	
private:
	void *__IPairCollection__2;	// IPairCollection__2<TKey,TValue> 
	void *__IArrayPairList__2;	// IArrayPairList__2<TKey,TValue> 
	
public:
	operator IPairCollection__2<TKey,TValue>*(void) { return (IPairCollection__2<TKey,TValue>*)&__IPairCollection__2; }
	#if defined(MANAGED_INTERFACE_OPERATORS)
	// {1207AAB0-654E-4286-B3A6-7C9A97BAA313}
	operator  ::System::DelphiInterface<IArrayPairList__2<TKey,TValue> >()
	{
		 ::System::DelphiInterface<IArrayPairList__2<TKey,TValue> > intf;
		this->GetInterface(intf);
		return intf;
	}
	#else
	operator IArrayPairList__2<TKey,TValue>*(void) { return (IArrayPairList__2<TKey,TValue>*)&__IArrayPairList__2; }
	#endif
	
};

#pragma pack(pop)

//-- var, const, procedure ---------------------------------------------------
}	/* namespace Dictionary */
}	/* namespace Containers */
}	/* namespace Mitov */

//-- user supplied -----------------------------------------------------------
#ifdef __OLD__MANAGED_INTERFACE_OPERATORS__
  #define MANAGED_INTERFACE_OPERATORS
  #undef __OLD__MANAGED_INTERFACE_OPERATORS__
#endif // __OLD__MANAGED_INTERFACE_OPERATORS__

#pragma pack(pop)
#pragma option pop

#pragma delphiheader end.
//-- end unit ----------------------------------------------------------------
#endif	// Mitov_Containers_DictionaryHPP
